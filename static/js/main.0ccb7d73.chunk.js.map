{"version":3,"sources":["components/LoginForm/index.js","components/Header/index.js","components/Home/index.js","components/NotFound/index.js","components/ProtectedRoute/index.js","components/SkillsCard/index.js","components/SimilarJobItem/index.js","components/JobItemDetails/index.js","components/JobCard/index.js","components/ProfileDetails/index.js","components/JobsFilterGroup/index.js","components/JobProfileSection/index.js","components/Jobs/index.js","App.js","index.js"],"names":["LoginForm","state","username","password","showSubmitError","errorMsg","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","path","replace","onSubmitFailure","setState","onSubmitForm","event","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","onEnterUsername","target","value","onChangePassword","renderUsername","className","htmlFor","type","id","placeholder","onChange","renderPassword","this","undefined","get","to","src","alt","onSubmit","Component","withRouter","onClick","remove","Home","NotFound","ProtectedRoute","Cookie","SkillsCard","skillDetails","name","imageUrl","SimilarJobItem","jobDetails","companyLogoUrl","employmentType","jobDescription","location","title","rating","apiStatusConstants","JobItemDetails","jobItemList","similarJobItemList","apiStatus","getFormattedSkillData","company_logo_url","employment_type","job_description","getFormattedData","companyWebsiteUrl","company_website_url","lifeAtCompany","description","life_at_company","image_url","packagePerAnnum","package_per_annum","skills","map","eachSkill","getJobItem","match","params","url","headers","Authorization","updatedData","job_details","updatedSkillData","similar_jobs","eachSimilarJob","console","log","renderJobItemDetails","href","eachItem","renderFailureView","testid","renderLoadingView","color","height","width","renderJobViews","JobCard","ProfileDetails","profileList","getProfileDetails","profileData","profile_details","profileImageUrl","profile_image_url","shortBio","short_bio","renderProfileDetails","JobsFilterGroup","employmentTypesList","employ","changeEmploymentType","employmentTypeId","label","salaryRangesList","salary","changeSalaryRange","salaryRangeId","JobProfileSection","jobsList","searchInput","salaryRange","getJobDetails","join","jobs","eachJob","changeSearchInput","onKeyDown","key","prev","renderJobDetails","length","onEnterKey","eachData","renderJobProfileDetailsList","Jobs","App","exact","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0ccb7d73.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  onEnterUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  renderUsername = () => {\n    const {username} = this.state\n\n    return (\n      <>\n        <label className=\"label\" htmlFor=\"userName\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"userName\"\n          placeholder=\"Enter : raja\"\n          className=\"user-input\"\n          value={username}\n          onChange={this.onEnterUsername}\n        />\n      </>\n    )\n  }\n\n  renderPassword = () => {\n    const {password} = this.state\n\n    return (\n      <>\n        <label className=\"label\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          className=\"user-input\"\n          id=\"password\"\n          type=\"password\"\n          placeholder=\"Enter : raja@2021\"\n          value={password}\n          onChange={this.onChangePassword}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"jobby-app-container\">\n        <div className=\"card-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo\"\n          />\n          <form className=\"form-container\" onSubmit={this.onSubmitForm}>\n            <div className=\"input-container\">{this.renderUsername()}</div>\n            <div className=\"input-container\">{this.renderPassword()}</div>\n            <button className=\"login-button\" type=\"submit\">\n              Login\n            </button>\n            {showSubmitError && <p className=\"error-msg\">*{errorMsg}</p>}\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n","import Cookies from 'js-cookie'\nimport {withRouter, Link} from 'react-router-dom'\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  return (\n    <nav className=\"navbar-container\">\n      <div>\n        <Link to=\"/\" className=\"link-item\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo\"\n          />\n        </Link>\n      </div>\n      <ul className=\"header-list-items\">\n        <Link to=\"/\" className=\"link-item\">\n          <li className=\"home-heading home\">Home</li>\n        </Link>\n        <Link to=\"/jobs\" className=\"link-item\">\n          <li className=\"jon-heading home\">Jobs</li>\n        </Link>\n      </ul>\n      <div>\n        <button type=\"button\" className=\"logout-button\" onClick={onClickLogout}>\n          Logout\n        </button>\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(Header)\n","import Cookies from 'js-cookie'\nimport {Redirect, Link} from 'react-router-dom'\nimport Header from '../Header'\n\nimport './index.css'\n\nconst Home = () => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"home-container\">\n        <div className=\"responsive-container\">\n          <h1 className=\"main-heading\">Find The Job That Fits Your Life</h1>\n          <p className=\"job-desc\">\n            Millions of people are searching for jobs, salary information,\n            company reviews. Find the job that fits your abilities and\n            potential.\n          </p>\n          <Link to=\"/jobs\" className=\"link-item\">\n            <button type=\"button\" className=\"find-jobs\">\n              Find Jobs\n            </button>\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n      alt=\"not found\"\n      className=\"not-found-image\"\n    />\n    <h1 className=\"not-found-heading\">Page Not Found</h1>\n    <p className=\"not-desc\">\n      we’re sorry, the page you requested could not be found\n    </p>\n  </div>\n)\n\nexport default NotFound\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import './index.css'\n\nconst SkillsCard = props => {\n  const {skillDetails} = props\n  const {name, imageUrl} = skillDetails\n\n  return (\n    <li className=\"skill-list-items\">\n      <div className=\"skill-container\">\n        <img src={imageUrl} alt={name} className=\"skill-image\" />\n        <p className=\"image-name\">{name}</p>\n      </div>\n    </li>\n  )\n}\n\nexport default SkillsCard\n","import {AiFillStar} from 'react-icons/ai'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {GoLocation} from 'react-icons/go'\nimport './index.css'\n\nconst SimilarJobItem = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    title,\n    rating,\n  } = jobDetails\n\n  return (\n    <li className=\"similar-list-docs\">\n      <div className=\"logo-container\">\n        <img\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n          className=\"company-logo-url\"\n        />\n        <div>\n          <h1 className=\"company-logo-title\">{title}</h1>\n          <div className=\"rating-container\">\n            <AiFillStar className=\"star-icon\" />\n            <p className=\"count-rating\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"similar-desc-heading\">Description</h1>\n      <p className=\"similar-desc\">{jobDescription}</p>\n      <div className=\"location-container-flex-justify\">\n        <div className=\"responsive\">\n          <GoLocation className=\"location-logo\" />\n          <p className=\"location-desc\">{location}</p>\n        </div>\n        <div className=\"responsive\">\n          <BsBriefcaseFill className=\"location-logo-brief\" />\n          <p className=\"location-desc\">{employmentType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJobItem\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {AiFillStar} from 'react-icons/ai'\nimport {GoLocation} from 'react-icons/go'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {BiLinkExternal} from 'react-icons/bi'\nimport Loader from 'react-loader-spinner'\n\nimport SkillsCard from '../SkillsCard'\nimport Header from '../Header'\nimport SimilarJobItem from '../SimilarJobItem'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobItemList: {},\n    similarJobItemList: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobItem()\n  }\n\n  getFormattedSkillData = data => ({\n    companyLogoUrl: data.company_logo_url,\n    employmentType: data.employment_type,\n    jobDescription: data.job_description,\n    id: data.id,\n    rating: data.rating,\n    location: data.location,\n    title: data.title,\n  })\n\n  getFormattedData = data => ({\n    companyLogoUrl: data.company_logo_url,\n    companyWebsiteUrl: data.company_website_url,\n    employmentType: data.employment_type,\n    id: data.id,\n    jobDescription: data.job_description,\n    lifeAtCompany: {\n      description: data.life_at_company.description,\n      imageUrl: data.life_at_company.image_url,\n    },\n    location: data.location,\n    rating: data.rating,\n    title: data.title,\n    packagePerAnnum: data.package_per_annum,\n    skills: data.skills.map(eachSkill => ({\n      imageUrl: eachSkill.image_url,\n      name: eachSkill.name,\n    })),\n  })\n\n  getJobItem = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = this.getFormattedData(data.job_details)\n      const updatedSkillData = data.similar_jobs.map(eachSimilarJob =>\n        this.getFormattedSkillData(eachSimilarJob),\n      )\n      console.log(updatedData)\n      console.log(updatedSkillData)\n      this.setState({\n        jobItemList: updatedData,\n        similarJobItemList: updatedSkillData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderJobItemDetails = () => {\n    const {jobItemList, similarJobItemList} = this.state\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      jobDescription,\n      location,\n      title,\n      rating,\n      packagePerAnnum,\n      lifeAtCompany,\n      skills,\n    } = jobItemList\n    const {description, imageUrl} = lifeAtCompany\n\n    return (\n      <div className=\"full-job-item-container\">\n        <div className=\"job-items-container\">\n          <div className=\"logo-image-container\">\n            <img\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n              className=\"company-logo-justify\"\n            />\n            <div className=\"title-container\">\n              <h1 className=\"company-title-head\">{title}</h1>\n              <div className=\"rating-container\">\n                <AiFillStar className=\"star-icon\" />\n                <p className=\"count-rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"location-type-salary-container\">\n            <div className=\"location-container\">\n              <div className=\"responsive\">\n                <GoLocation className=\"location-logo\" />\n                <p className=\"location-desc\">{location}</p>\n              </div>\n              <div className=\"responsive\">\n                <BsBriefcaseFill className=\"location-logo-brief\" />\n                <p className=\"location-desc\">{employmentType}</p>\n              </div>\n            </div>\n            <p className=\"package-desc\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"description-container\">\n            <h1 className=\"desc-heading\">Description</h1>\n            <a className=\"visit-link\" href={companyWebsiteUrl}>\n              Visit\n              <BiLinkExternal className=\"bi-link\" />\n            </a>\n          </div>\n          <p className=\"job-story-desc\">{jobDescription}</p>\n          <h1 className=\"skill-heading\">Skills</h1>\n          <ul className=\"skill-container\">\n            {skills.map(eachSkill => (\n              <SkillsCard key={eachSkill.id} skillDetails={eachSkill} />\n            ))}\n          </ul>\n          <h1 className=\"life-company-heading\">Life at company</h1>\n          <div className=\"life-at-company-container\">\n            <p className=\"life-company-desc\">{description}</p>\n            <img\n              src={imageUrl}\n              alt=\"life at company\"\n              className=\"company-logo\"\n            />\n          </div>\n        </div>\n        <h1 className=\"similar-job-heading\">Similar Jobs</h1>\n        <ul className=\"similar-cards\">\n          {similarJobItemList.map(eachItem => (\n            <SimilarJobItem key={eachItem.id} jobDetails={eachItem} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"render-loading-view\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-view\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong </h1>\n      <p className=\"failure-desc\">\n        We cannot seem to find the page you are looking for\n      </p>\n      <button\n        type=\"button\"\n        testid=\"button\"\n        className=\"job-item-failure-button\"\n        onClick={this.getJobItem}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"profile-loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobViews = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderJobItemDetails()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"get-products-details-container\">\n          {this.renderJobViews()}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import {AiFillStar} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\nimport {HiLocationMarker, HiMail} from 'react-icons/hi'\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobDetails} = props\n  const {\n    title,\n    companyLogoUrl,\n    rating,\n    employmentType,\n    location,\n    id,\n    packagePerAnnum,\n    jobDescription,\n  } = jobDetails\n\n  return (\n    <Link to={`/jobs/${id}`} className=\"link-item\">\n      <li className=\"job-list-items\">\n        <div className=\"company-container\">\n          <div>\n            <img src={companyLogoUrl} alt=\"company logo\" className=\"logo-url\" />\n          </div>\n          <div>\n            <h1 className=\"company-title\">{title}</h1>\n            <div className=\"star-icon-container\">\n              <AiFillStar className=\"star-icon\" />\n              <p className=\"rating-count\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"location-container-flex-content\">\n          <div className=\"location-desc\">\n            <div className=\"star-icon-container\">\n              <HiLocationMarker className=\"location-icon\" />\n              <p className=\"location-desc description\">{location}</p>\n            </div>\n            <div className=\"star-icon-container\">\n              <HiMail className=\"location-icon left-icon\" />\n              <p className=\"emp-type description\">{employmentType}</p>\n            </div>\n          </div>\n          <div className=\"star-icon-container\">\n            <p className=\"package-desc description\">{packagePerAnnum}</p>\n          </div>\n        </div>\n        <hr className=\"line\" />\n        <h1 className=\"desc-heading\">Description</h1>\n        <p className=\"job-description\">{jobDescription}</p>\n      </li>\n    </Link>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass ProfileDetails extends Component {\n  state = {\n    profileList: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  getProfileDetails = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/profile'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const profileData = {\n        name: data.profile_details.name,\n        profileImageUrl: data.profile_details.profile_image_url,\n        shortBio: data.profile_details.short_bio,\n      }\n      this.setState({\n        profileList: profileData,\n        apiStatus: apiStatusConstants.success,\n      })\n    }\n  }\n\n  renderProfileDetails = () => {\n    const {profileList} = this.state\n    const {name, profileImageUrl, shortBio} = profileList\n\n    return (\n      <div className=\"profile-container\">\n        <img src={profileImageUrl} alt=\"profile\" className=\"profile-logo\" />\n        <h1 className=\"name-heading\">{name}</h1>\n        <p className=\"bio\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  renderLoadingView = () => (\n    <div className=\"profile-loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-container\">\n      <button\n        type=\"button\"\n        testid=\"button\"\n        className=\"job-item-failure-button\"\n        onClick={this.getProfileDetails}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  render() {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderProfileDetails()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n}\n\nexport default ProfileDetails\n","import ProfileDetails from '../ProfileDetails'\nimport './index.css'\n\nconst JobsFilterGroup = props => {\n  const getEmploymentTypeList = () => {\n    const {employmentTypesList} = props\n\n    return employmentTypesList.map(employ => {\n      const {changeEmploymentType} = props\n      const onChangeEmployType = event =>\n        changeEmploymentType(event.target.value)\n\n      return (\n        <li\n          className=\"checkbox-list-items\"\n          key={employ.employmentTypeId}\n          onChange={onChangeEmployType}\n        >\n          <input\n            type=\"checkbox\"\n            className=\"check-radio\"\n            id={employ.employmentTypeId}\n            value={employ.employmentTypeId}\n          />\n          <label htmlFor={employ.employmentTypeId} className=\"check-label\">\n            {employ.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderEmploymentType = () => (\n    <div className=\"salary-container\">\n      <h1 className=\"salary-heading\">Type of Employment</h1>\n      <ul className=\"salary-range-container\">{getEmploymentTypeList()}</ul>\n    </div>\n  )\n\n  const getSalaryRangeList = () => {\n    const {salaryRangesList} = props\n\n    return salaryRangesList.map(salary => {\n      const {changeSalaryRange} = props\n      const onChangeSalary = () => changeSalaryRange(salary.salaryRangeId)\n\n      return (\n        <li\n          className=\"checkbox-list-items\"\n          key={salary.salaryRangeId}\n          onChange={onChangeSalary}\n        >\n          <input\n            type=\"radio\"\n            className=\"check-radio\"\n            id={salary.salaryRangeId}\n            name=\"salary\"\n          />\n          <label htmlFor={salary.salaryRangeId} className=\"check-label\">\n            {salary.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderSalaryRange = () => (\n    <div className=\"salary-container\">\n      <h1 className=\"salary-heading\">Salary Range</h1>\n      <ul className=\"salary-range-container\">{getSalaryRangeList()}</ul>\n    </div>\n  )\n\n  return (\n    <div className=\"job-filter-group\">\n      <ProfileDetails />\n      <hr className=\"horizontal-line\" />\n      {renderEmploymentType()}\n      <hr className=\"horizontal-line\" />\n      {renderSalaryRange()}\n    </div>\n  )\n}\n\nexport default JobsFilterGroup\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport {BsSearch} from 'react-icons/bs'\nimport Cookies from 'js-cookie'\nimport JobCard from '../JobCard'\nimport JobsFilterGroup from '../JobsFilterGroup'\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass JobProfileSection extends Component {\n  state = {\n    jobsList: [],\n    searchInput: '',\n    employmentType: [],\n    salaryRange: 0,\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobDetails()\n  }\n\n  getJobDetails = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n\n    const jwtToken = Cookies.get('jwt_token')\n    const {salaryRange, employmentType, searchInput} = this.state\n    const url = `https://apis.ccbp.in/jobs?employment_type=${employmentType.join()}&minimum_package=${salaryRange}&search=${searchInput}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      console.log(data)\n      const updatedData = data.jobs.map(eachJob => ({\n        companyLogoUrl: eachJob.company_logo_url,\n        employmentType: eachJob.employment_type,\n        id: eachJob.id,\n        jobDescription: eachJob.job_description,\n        location: eachJob.location,\n        packagePerAnnum: eachJob.package_per_annum,\n        rating: eachJob.rating,\n        title: eachJob.title,\n      }))\n      this.setState({\n        jobsList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  changeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onKeyDown = event => {\n    if (event.key === 'Enter') {\n      this.getJobDetails()\n    }\n  }\n\n  changeSalaryRange = salary => {\n    this.setState({salaryRange: salary}, this.getJobDetails)\n  }\n\n  changeEmploymentType = type => {\n    this.setState(\n      prev => ({employmentType: [...prev.employmentType, type]}),\n      this.getJobDetails,\n    )\n  }\n\n  renderJobDetails = () => {\n    const {jobsList, searchInput} = this.state\n    const jobsDisplay = jobsList.length > 0\n\n    return jobsDisplay ? (\n      <div className=\"details-container\">\n        <div className=\"search-input\">\n          <input\n            type=\"search\"\n            className=\"search\"\n            placeholder=\"Search\"\n            value={searchInput}\n            onChange={this.changeSearchInput}\n            onKeyDown={this.onEnterKey}\n          />\n          <button\n            type=\"button\"\n            testid=\"searchButton\"\n            className=\"search-button\"\n            onClick={this.getJobDetails}\n          >\n            <BsSearch className=\"search-icon\" />\n          </button>\n        </div>\n        <ul className=\"job-details-item-container\">\n          {jobsList.map(eachData => (\n            <JobCard key={eachData.id} jobDetails={eachData} />\n          ))}\n        </ul>\n      </div>\n    ) : (\n      <div className=\"no-jobs-container\">\n        <div className=\"search-input-content\">\n          <input\n            type=\"search\"\n            className=\"search\"\n            placeholder=\"Search\"\n            value={searchInput}\n            onChange={this.changeSearchInput}\n            onKeyDown={this.onEnterKey}\n          />\n          <button\n            type=\"button\"\n            testid=\"searchButton\"\n            className=\"search-button\"\n            onClick={this.getJobDetails}\n          >\n            <BsSearch className=\"search-icon\" />\n          </button>\n        </div>\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n          alt=\"no jobs\"\n          className=\"no-jobs\"\n        />\n        <h1 className=\"no-jobs-heading\">No Jobs Found</h1>\n        <p className=\"no-jobs-desc\">\n          We could not find any jobs. Try other filters.\n        </p>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-view\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-desc\">\n        we cannot seem to find the page you are looking for\n      </p>\n      <button\n        type=\"button\"\n        testid=\"button\"\n        className=\"jobs-failure-button\"\n        onClick={this.getJobDetails}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"profile-loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobProfileDetailsList = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderJobDetails()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {searchInput} = this.state\n    return (\n      <div className=\"job-details-container\">\n        <div className=\"render-group-items\">\n          <JobsFilterGroup\n            employmentTypesList={employmentTypesList}\n            salaryRangesList={salaryRangesList}\n            changeEmploymentType={this.changeEmploymentType}\n            changeSalaryRange={this.changeSalaryRange}\n            searchInput={searchInput}\n            changeSearchInput={this.changeSearchInput}\n            getJobDetails={this.getJobDetails}\n          />\n        </div>\n        <div className=\"responsive-items\">\n          {this.renderJobProfileDetailsList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default JobProfileSection\n","import Header from '../Header'\nimport JobProfileSection from '../JobProfileSection'\nimport './index.css'\n\nconst Jobs = () => (\n  <>\n    <Header />\n    <div className=\"job-profile-container\">\n      <JobProfileSection />\n    </div>\n  </>\n)\n\nexport default Jobs\n","import {Route, Switch, Redirect} from 'react-router-dom'\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\nimport NotFound from './components/NotFound'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport JobItemDetails from './components/JobItemDetails'\nimport Jobs from './components/Jobs'\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={LoginForm} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter as Router} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}